# Application configuration
spring.application.name=transaction-enrichment-service

# Server configuration
server.port=8081
server.tomcat.max-threads=200
server.tomcat.connection-timeout=5000

# Kafka consumer configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=transaction-enrichment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8081
spring.kafka.consumer.properties.specific.avro.reader=true
spring.kafka.consumer.properties.isolation.level=read_committed

# Kafka producer configuration
spring.kafka.producer.acks=all
spring.kafka.producer.compression-type=lz4
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://localhost:8081
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
spring.kafka.producer.properties.retries=5
spring.kafka.producer.properties.compression.type=lz4
spring.kafka.producer.properties.batch.size=32768
spring.kafka.producer.properties.linger.ms=5
spring.kafka.producer.properties.buffer.memory=33554432

# Kafka topics
kafka.topics.input=banking-transactions
kafka.topics.enriched=enriched-transactions
kafka.topics.errors=transaction-processing-errors

# Database configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/customer_data
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.connection-timeout=20000

# JPA configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=50
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# Redis configuration
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.timeout=2000
spring.redis.lettuce.pool.max-active=8
spring.redis.lettuce.pool.max-idle=8
spring.redis.lettuce.pool.min-idle=2

# Cache configuration
cache.customer-data-ttl=600
cache.risk-profile-ttl=300

# Risk scoring service configuration
risk-service.url=http://risk-scoring-service:8085/api/risk
risk-service.timeout=2000

# Resilience4j circuit breaker configuration
resilience4j.circuitbreaker.instances.riskScoringService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.riskScoringService.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.riskScoringService.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.instances.riskScoringService.slidingWindowSize=10
resilience4j.circuitbreaker.instances.riskScoringService.slidingWindowType=COUNT_BASED

# Resilience4j retry configuration
resilience4j.retry.instances.riskScoringService.maxAttempts=3
resilience4j.retry.instances.riskScoringService.waitDuration=1000
resilience4j.retry.instances.riskScoringService.enableExponentialBackoff=true
resilience4j.retry.instances.riskScoringService.exponentialBackoffMultiplier=2

# Actuator endpoints for monitoring
management.endpoints.web.exposure.include=health,info,prometheus,metrics,loggers
management.endpoint.health.show-details=always
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# Logging configuration
logging.level.root=INFO
logging.level.com.fraudrisk.enrichment=DEBUG
logging.level.org.apache.kafka=WARN
logging.level.org.hibernate.SQL=INFO
logging.level.org.springframework.transaction=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.springframework.data=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Jackson configuration
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.jackson.deserialization.FAIL_ON_UNKNOWN_PROPERTIES=false
spring.jackson.default-property-inclusion=non_null